{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/customFetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/calendar-settings-es.js","components/ui/NavBar.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","events","activeEvent","modalOpen","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventsLoad","eventAddNew","event","eventUpdated","eventDeleted","eventCleanActive","checkingFinish","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","clone","initFormEvent","notes","CalendarModal","useSelector","isValid","setIsValid","startDate","setStartDate","endDate","setEndDate","formValues","setFormValues","dateStart","dateEnd","useEffect","closeModal","isOpen","onRequestClose","style","contentLabel","closeTimeoutMS","overlayClassName","startMoment","endMoment","isSameOrAfter","trim","length","position","icon","showConfirmButton","timer","console","log","getState","evento","eventStartAddNew","minDate","autoComplete","rows","messages_es","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","NavBar","onClick","clear","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","messages","eventPropGetter","isSelected","backgroundColor","_id","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdd6e04e.chunk.js","sourcesContent":["\r\nexport const types = {\r\n\r\n    /* UI */\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    /* Calendar Events */\r\n    eventLoadEvents: '[events] Load events',\r\n    eventAddNew: '[event] Add new event',\r\n    eventStartAddNew: '[event] Start add new event',\r\n    eventSetActive: '[event] Set active event',\r\n    eventCleanActive: '[event] Clean active event',\r\n    eventUpdated: '[event] Updated event',\r\n    eventDeleted: '[event] Deleted event',\r\n    eventLogout: '[event] Set Initial state on logout',\r\n\r\n    /* auth  */\r\n    authChecking: '[auth] checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStarTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import moment from \"moment\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nconst initialState =\r\n{\r\n    events: [],\r\n    activeEvent: null,\r\n}\r\n\r\n// const initialState = {\r\n//     events: [],\r\n//     activeEvent: null\r\n// };\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventCleanActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(e => (e.id === action.payload.id) ? action.payload : e),\r\n                activeEvent: null\r\n            }\r\n            \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(e => (e.id !== state.activeEvent.id) ),\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventLoadEvents:\r\n            return{\r\n                ...state,\r\n                events: [ ...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return { ...state, modalOpen: true }\r\n        case types.uiCloseModal:\r\n            return { ...state, modalOpen: false }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { authReducer} from './authReducer'\r\n\r\nexport  const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n})\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {rootReducer} from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);","\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: { 'x-token': token }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: { \r\n                'Content-type': 'application/json',\r\n                'x-token': token \r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}\r\n","import moment from \"moment\"\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map((e) => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate()\r\n    })\r\n    );\r\n};\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/customFetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartLoad = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.events);\r\n            dispatch(eventsLoad(events))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventsLoad = (events) => ({\r\n    type: types.eventLoadEvents,\r\n    payload: events\r\n})\r\n\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n            const { uid, name } = getState().auth;\r\n\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = { uid, name }\r\n\r\n                dispatch(eventAddNew(event))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\n\r\nexport const eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'success',\r\n                    title: 'Your event has been saved',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                });\r\n            } else {\r\n\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'error',\r\n                    title: body.msg,\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n            const { id } = getState().calendar.activeEvent;\r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'success',\r\n                    title: 'Your event has been deleted',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                });\r\n            } else {\r\n\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'error',\r\n                    title: body.msg,\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n const eventDeleted = () => ({ type: types.eventDeleted })\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\nexport const eventCleanActive = () => ({ type: types.eventCleanActive })\r\n\r\nexport const clearCalendarState = () => ({ type: types.eventLogout})\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/customFetch\"\r\nimport { types } from \"../types/types\";\r\nimport { clearCalendarState } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithoutToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-Date', new Date().getTime());\r\n            dispatch(login({ token: body.token, uid: body.uid }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithoutToken('auth/register', { name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-Date', new Date().getTime());\r\n            dispatch(login({ token: body.token, uid: body.uid }))\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-Date', new Date().getTime());\r\n            dispatch(login({ token: body.token, uid: body.uid, name: body.name }))\r\n\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n\r\n    return async (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(clearCalendarState())\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: '',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'rafa',\r\n        rEmail: 'rafa@yopmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    })\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            Swal.fire('Error', 'Password do not match', 'error');\r\n        }\r\n        dispatch(startRegister( rName, rEmail, rPassword1));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit= { handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n        <strong>{title}</strong>   \r\n        <span>-{user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({type: types.uiOpenModal })\r\nexport const uiCloseModal = () => ({type: types.uiCloseModal })\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventCleanActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root')\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst end = now.clone().add(1, 'hours');\r\n\r\nconst initFormEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: end.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [isValid, setIsValid] = useState(true)\r\n    // const [isOpen, setIsOpen] = useState(true)\r\n    const [startDate, setStartDate] = useState(now.toDate())\r\n    const [endDate, setEndDate] = useState(end.toDate())\r\n    const [formValues, setFormValues] = useState(initFormEvent)\r\n\r\n    const { title, notes, start: dateStart, end: dateEnd } = formValues;\r\n\r\n    useEffect(() => {\r\n        \r\n        if (activeEvent){\r\n            setFormValues(activeEvent)\r\n        }else{\r\n            setFormValues(initFormEvent)\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        setFormValues(initFormEvent);\r\n        dispatch(eventCleanActive())\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e,\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const startMoment = moment(dateStart);\r\n        const endMoment = moment(dateEnd);\r\n\r\n        if (startMoment.isSameOrAfter(endMoment)) {\r\n            return Swal.fire('Error', 'the end date time should be greater than start date time', 'error');\r\n        }\r\n        if (title.trim().length < 2) {\r\n            return setIsValid(false)\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        //TODO: realizar grabacion en BD\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues))\r\n        } else {     \r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        closeModal()\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={isOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            contentLabel=\"Example Modal\"\r\n            className=\"modal\"\r\n            closeTimeoutMS={200}\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> \r\n                {\r\n                    (activeEvent)\r\n                    ? 'Editar Evento' : 'Nuevo evento'\r\n                \r\n                } \r\n            </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleStartDateChange}\r\n                        value={startDate}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleEndDateChange}\r\n                        value={endDate}\r\n                        minDate={startDate}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control  ${!isValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","export const messages_es = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    \r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n\r\n            <span className=\"text-white\"> {name} </span>\r\n\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <li className=\"fas fa-sign-out-alt\"></li>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAddNewEvent = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n    \r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\" onClick={handleAddNewEvent}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDeleteEvent = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n    \r\n    return (\r\n        <button className=\"btn btn-danger fab-btn-delete\" onClick={handleDeleteEvent}>\r\n            <i className=\"fas fa-trash\"></i>\r\n            &nbsp; Delete event\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { messages_es } from '../../helpers/calendar-settings-es';\r\nimport { NavBar } from '../ui/NavBar'\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventCleanActive, eventSetActive, eventStartLoad } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n    useEffect(() => {\r\n    \r\n        dispatch(eventStartLoad())\r\n    }, [dispatch])\r\n\r\n    const onViewChage = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectedEvent = (e) => {\r\n        dispatch(eventSetActive(e))\r\n        // dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onDoubleClick = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#aa00ff' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        }\r\n\r\n        return { style }\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        if (activeEvent) {\r\n            dispatch(eventCleanActive())\r\n        }else{\r\n            dispatch(uiOpenModal())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages_es}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{ event: CalendarEvent }}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectedEvent}\r\n                onView={onViewChage}\r\n                view={lastView}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n            />\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route {...rest} component={props => (\r\n            (isAuthenticated)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to='/login' />)\r\n        )} />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest} component={props => (\r\n            (isAuthenticated)\r\n                ? (<Redirect to='/' />)\r\n                : (<Component {...props} />)\r\n        )} />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return <h2>Wait...</h2>\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path='/login' component={LoginScreen} isAuthenticated={ !!uid } /> \r\n                    <PrivateRoute exact path='/' component={CalendarScreen} isAuthenticated={ !!uid } /> \r\n                    \r\n                    <Redirect to='/'/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n  <CalendarApp/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}